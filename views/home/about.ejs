<!DOCTYPE html>
<html>
  <head>
    <% include ../partials/head %>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  </head>
  <body>
    <% include ../partials/nav %>
    <div class="container">
  <h2>PLAN DE CURSO</h2>
  <p>DESDE MARTES, EL 21 DE NOVIEMBRE, 2017</p>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Título</th>
        <th>Subtítulo</th>
        <th>Contenido</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Acerca de MEAN stack</td>
        <td>Construir un entorno de desarrollo</td>
        <td>1. Git y GitHub<br>
            2. Instalación de Git y unión a GitHub<br>
            3. Git, GitHub Uso simple<br>
            4. NPM<br>
            5. Instalación del nodo JS, NPM<br>
            6. Instalación de Atom</td>
      </tr>
      <tr>
        <td>Primer paso a Node JS</td>
        <td>¡Hola Mundo!</td>
        <td>1. Métodos HTTP (Verbos HTTP) - GET, POST, PUT, PATCH, DELETE<br>
            2. Ejecución del servidor como Express<br>
            3. Sitio estático, dinámico (dinámico) Sitio<br>
            4. Agregar carpeta estática<br>
            5. Creación de un sitio web dinámico con EJS</td>
      </tr>
      <tr>
        <td></td>
        <td>Crear libreta de direcciones</td>
        <td>1. Variable de entorno (Variable de entorno)<br>
            2. Únase a mlab.com y cree en línea Mongo DB<br>
            3. Libreta de direcciones - Creación de proyecto y conexión DB con mongoose<br>
            4. CRUD y 7 acciones estándar<br>
            5. Libreta de direcciones - Índice, Nuevo, Crear<br>
            6. Libreta de direcciones - Mostrar, editar, actualizar, destruir<br>
            7. Node.js - Módulo<br>
            8. Libreta de direcciones - Creación de un módulo<br>
            9. Libreta de direcciones - Styling con bootstrap</td>
      </tr>
      <tr>
        <td></td>
        <td>Crear un tablón de anuncios</td>
        <td>1. Tablón de anuncios - creación de proyectos y navbar<br>
            2. Tablón de anuncios - Desarrollo de la parte posterior<br>
            3. Tablón de anuncios - Desarrollo Front End<br>
            4. Tablón de anuncios - Modificar el estilo<br>
            5. Tablón de anuncios - Registro de miembros<br>
            6. Tablón de anuncios - Encriptación de contraseña de cuenta (bcrypt)<br>
            7. Tablón de anuncios - Procesamiento de errores de usuario<br>
            8. Tablón de anuncios - Login function added<br>
            9. Tablón de anuncios - Procesamiento de errores posteriores<br>
            10. Tablón de anuncios - Creación de relaciones posteriores al usuario<br>
            11. Tablón de anuncios - Restricciones de acceso</td>
      </tr>
      <tr>
        <td>Angular 2</td>
        <td>Tour de los Héroes</td>
        <td>0. Cómo instalar Angular 2 y ejecutar proyectos con Angular-CLI<br>
            1. Introducción y Editor de Héroes (@Component, @NgModule, [(ngModel)])<br>
            2. MASTER / DETAIL (* ngFor, [clase], (clic), * ngIf)<br>
            3. Componentes múltiples (@input)<br>
            4. Servicios (@Injectable, OnInit, ngOnInit)<br>
            5. Enrutamiento (router-outlet, routerLink, ActivatedRoute, Observable)<br>
            6. HTTP</td>
      </tr>
      <tr>
        <td></td>
        <td>Crear sitio predeterminado</td>
        <td>1. Crear proyecto y crear ruta<br>
            2. 404 error página añadida<br>
            3. Creación de interfaces y conexión a auth API<br>
            4. Crear formulario de inicio de sesión con formularios reactivos Módulo<br>
            5. Poner token en llamada REST API con interceptor de solicitud HTTP</td>
      </tr>
    </tbody>
  </table>
</div>
  </body>
</html>
